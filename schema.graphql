# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Channel {
  id: ID!

  """Whether this channel is a RPG channel."""
  isGame: Boolean!
  isPublic: Boolean!
  name: String!
  title: String!
  topic: String!
  description: String!
  created: Date!
  modified: Date!
  isArchived: Boolean!
  owner: User!
  ownerId: ID!
  messages: [Message!]!
  invitations: [Invitation!]!
  members: [Members!]!
}

"""Date custom scalar type"""
scalar Date

type Invitation {
  token: String!
  channel: Channel!
  channelId: ID!
  creator: User!
  creatorId: ID!
  expiration: Date!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Members {
  user: User!
  userId: ID!
  channel: Channel!
  channelId: ID!
  isAdmin: Boolean!
  joinDate: Date!
  isMuted: Boolean!
  character: String!
  isOnline: Boolean!
}

type Message {
  id: ID!
  user: User
  userId: ID
  channel: Channel!
  channelId: ID!

  """
  Name of character. The message is a Out-of-Character message only if this field empty
  """
  character: String!
  isAction: Boolean!
  isGm: Boolean!
  isPinned: Boolean!

  """Message plain text."""
  text: String!
  entities: [JSONObject!]!
  parent: ID
  parentId: ID
  seed: Int!
  created: Date!
  modified: Date!
}

type Mutation {
  sendMessage(id: ID, character: String!, channelId: ID!, entities: [JSONObject!]!, text: String!): Message!
  sendMessageSource(id: ID, isExpression: Boolean = true, character: String!, channelId: ID!, source: String!): Message!
  sendMessagePreview(
    isExpression: Boolean = false
    startTime: Date!

    """If blank, this is a Out-of-Character message."""
    character: String!
    channelId: ID!

    """If blank, just show typing."""
    source: String!
    id: ID!
  ): Boolean!
  editMessage(source: String!, messageId: String!): Message!
  deleteMessage(messageId: ID!): Boolean!
  register(nickname: String!, password: String!, username: String!): User!
  createChannel(description: String = "", isPublic: Boolean = true, isGame: Boolean = false, title: String!, name: String!): Channel!
  joinChannel(userId: ID, channelId: ID!): Members!
  quitChannel(channelId: ID!): Boolean!
  deleteChannel(name: String!, channelId: ID!): Boolean!
  editChannel(description: String, isArchive: Boolean, isPublic: Boolean, isGame: Boolean, title: String, name: String, channelId: ID!): Boolean!
}

type PreviewMessage {
  id: ID!
  isExpression: Boolean!
  userId: ID!
  channelId: ID!
  character: String!
  source: String!
  startTime: Date!
  updateTime: Date!
}

type Query {
  """Get all messages."""
  messages: [Message!]!
  getMessageById(id: ID!): Message!
  getUserById(id: ID!): User
  getUserByUsername(username: String!): User

  """Keep alive."""
  ping: Boolean!
  getMe: User!

  """Get all channels."""
  channels: [Channel!]!
  getChannelById(id: ID!): Channel
}

type Subscription {
  newMessage: Message!
  messagePreview: PreviewMessage!
  messageDeleted: ID!
  messageEdited: Message!
}

type User {
  id: ID!
  username: String!
  nickname: String!
  avatar: String!
  created: Date!
  isOnline: Boolean!
}
